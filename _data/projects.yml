- name: Knowledge Extraction and Visualization
  technologies: Scala
  description: I am currently in a team working on extracting knowledge about the neuroendocrine system from PubMed
               and visualizing these knowledge. Relations are compiled from sentences parsed using NLP from relevant
               articles on PubMed. A graph involving nodes and edges is used to represent these relations.
               Gephi is used to help us with visualization. A presentation will be made at the Experimental Biology
               conference in Boston in April 2015.

- name: UW Course Alerter
  technologies: Python
  description: Sometimes when enrolling for courses, students cannot enroll in the section they wish, or not in the course
               at all. It is also slow to check Quest for availability, the registration system of the University of Waterloo.
               UW Courser Alerter is made to make registering for desired courses and sections easier.
               Currently, an API is available to check for course availability and send email notifications if the course or
               section is available and a sample cron client is made that calls this API regularly.

- name: Waterloo Region ION Survey
  technologies: Node.js with AngularJS
  description: I worked with an Civil Engineering undergrad and a Civil Engineering Graduate student
               to create a single page web application to collect surveys on people's thoughts about the LRT project in the
               Kitchener-Waterloo region. I architected this web application, wrote more than 70% of the code, and maintain
               it on Heroku.

- name: "GRTSquare: bus times in your pocket"
  technologies: C++
  description: GRTSquare is a native BlackBerry 10 app wrote in C++, using the Cascades and Qt framework,
               that allows users to checkout when the next bus arrives based on the current time or some future time.
               The application stores everything locally so there is no need for a data connection for it to perform the lookup.

- name: "LaTeXMe: easier instant messaging for school"
  technologies: JavaScript
  description: "Often when we are trying to communicate mathematical equations to others using instant messaging,
  it is difficult to decipher the equation in plain text. For example, (b + ((a+b)^2/(c+d)) + cd/2) is pretty hard
  to read. During the <b>2014 Facebook Hackathon</b> at the University of Waterloo, I worked alongside three
  other students from the University of Waterloo to create LaTeXMe, a proof of concept web app for instant messaging
  where equations need to be sent. Users can login to Facebook and invite their friends to join them to collaborate on
  math in the LaTexMe chatroom, which can render equations beautifully on the screen from LaTeX. It is powered by
  the MathJax library. I gained exposure to using the <b>Facebook Graph API</b> while working on this project."

- name: "multichat: simulated chat application across a network"
  technologies: Java
  description: "multichat consists of 2 different kinds of programs: a server and a client.
  Multiple instances of the client program can run at the same time and messages can be sent between clients
  and the server. New clients can join and leave the group at any point in time. The main purpose of this project
  is to practice working with <b>concurrency</b> and <b>networking</b> in Java."

- name: "GradeTrackr: pocket gradebook"
  technologies: Android
  description: "GradeTrackr is an Android application that helps students to keep track of their grades.
  I worked on this project alongside 3 peers in my program. Students can enter terms, courses, categories,
  and different kinds of evaluations such as tests, quizzes, assignments, and projects into the app and the
  app can calculate the weighted averages. All data is stored in a SQLite database."

- name: "Sudoku Solver: solve any Sudoku puzzles"
  technologies: Java, JavaScript, C#
  description: !xml |
                <div>
                  Sudoku Solver does exactly what it says, it can solve any Sudoku found on the web and in puzzle books.
                  I used my own algorithm for this project, which is based on 2 elimination techniques.
                  The Sudoku Solver was initially written in Java, and afterwards it was ported to JavaScript as an iOS web app (Mobile Safari)
                  and also to C# as a native Windows 8 app. The Windows 8 app was made during the 2012 WowZapp Microsoft Worldwide Hackathon
                  and the Sudoku Solver received a mention on
                  <a href="http://blogs.msdn.com/b/cdnstudents/archive/2012/12/04/waterloo-wowzapp-microsoft-worldwide-hackathon.aspx" target="_blank">
                  this MSDN blog</a>.
                </div>
