#- name: Project Name
#  technologies: Languages
#  description: Description here
#  links:
#    - display: View on GitHub
#      href: "https://github.com/..."
#    - display: View live demo
#      href: "www.heroku"
#  screenshots:
#    - description: Some description of screenshot
#      thumbnail: Link to thumbnail
#      fullsize: Link to full sized image

- name: Knowledge Extraction and Visualization
  technologies: Scala, JavaScript
  link: "https://github.com/crea-berkeley/relation-extraction"
  description: "I worked within a team consisting of students from the University of Waterloo
                and Professor S. Garan from the University of California, Berkeley, on NLP
                relation extraction and visualization. I was responsible for building a
                data pipeline to allow the relation extraction program to processing abstracts from PubMed.
                 I also worked on parsing a human anatomy tree, a web app that can visualize
                 binary relations, and a tool to curate extracted relations.
                 Technologies I work with include Scala, Docker, Sigma.js, D3.js, React, MySQL, and PostgreSQL."
  screenshots:
    - description: "View details about a specific substance."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist1_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist1.png"
    - description: "Zoom out of the graph."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist2_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist2.png"
    - description: "Select only nodes that represent a keyword from the list."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist3_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/crea/bionavist3.png"
  links:
    - display: Knowledge Extraction on GitHub
      href: "https://github.com/tuzhucheng/knowledge-extraction"
    - display: Knowledge Visualization on GitHub
      href: "https://github.com/markfarrell/graph-visualization"
    - display: Relation Extraction Web App on GitHub
      href: "https://github.com/dstratossong/CREA-Web-App"
    - display: Relation Curation Tool
      href: "https://github.com/tuzhucheng/crea-relation-filterer"
    - display: Body Anatomy Tree Constructor on GitHub
      href: "https://github.com/crea-berkeley/crea-anatomy-tree-builder"

- name: Sleep Guardian
  technologies: Python, Android, JavaScript
  link:
  description: Combine browser history with mobile app usage events to calculate how much you sleep each night,
               eliminating the need for any user data entry under the assumption you use your phone, tablet, or
               computer before and after sleeping. This idea was envisioned by a friend and three of us built it
               together at Hack the North.
  screenshots:
    - description: "Home page"
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/homepage_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/homepage.png"
    - description: "Sleep graph over time"
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/graph_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/graph.png"
    - description: "Chrome extension for data collection"
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/chrome_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/chrome.png"
    - description: "Android for data collection"
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/android_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sleepguardian/android.png"
  links:
    - display: Source Code on GitHub
      href: "https://github.com/luckytoilet/HTN2015"
    - display: View Live Web App
      href: "http://www.sleepguardian.co/"
    - display: Devpost
      href: "http://devpost.com/software/sleep-guardian"

- name: UW Course Alerter
  technologies: Python
  link:
  description: Sometimes when enrolling for courses, students cannot enroll in the section they wish, or not in the course
               at all. It is also slow to check Quest for availability, the registration system of the University of Waterloo.
               UW Courser Alerter is made to make registering for desired courses and sections easier.
               Currently, an API is available to check for course availability and send email notifications if the course or
               section is available and a sample cron client is made that calls this API regularly.
  screenshots:
    - description: "An email notification is sent when a class has space that opened up."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/uwalert/email_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/uwalert/email.png"
  links:
    - display: Source Code on GitHub
      href: "https://github.com/tuzhucheng/uw-course-alerter"

- name: Waterloo Region ION Survey
  technologies: Node.js with AngularJS
  description: "I worked with an Civil Engineering undergrad and a Civil Engineering Graduate student
               to create a single page web application to collect surveys on people's thoughts about the LRT project in the
               Kitchener-Waterloo region. I architected this web application, wrote more than 70% of the code, and maintain
               it on Heroku."
  links:
    - display: View Live Web App
      href: "https://mighty-ocean-7716.herokuapp.com/"

- name: "GRTSquare"
  technologies: C++
  description: GRTSquare is a native BlackBerry 10 app wrote in C++, using the Cascades and Qt framework,
               that allows users to checkout when the next bus arrives based on the current time or some future time.
               The application stores everything locally so there is no need for a data connection for it to perform the lookup.
  screenshots:
    - description: "Search for a bus stop."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/search_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/search.png"
    - description: "Displays the routes at the current stop and the next bus times for each route."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/current_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/current.png"
    - description: "Select a future time to look up."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/select_future_small.png"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/grtsquare/select_future.png"
  links:
    - display: Source Code on GitHub
      href: "https://github.com/tuzhucheng/GRTSquare"

- name: "LaTeXMe"
  technologies: JavaScript
  description: "Often when we are trying to communicate mathematical equations to others using instant messaging,
  it is difficult to decipher the equation in plain text. For example, (b + ((a+b)^2/(c+d)) + cd/2) is pretty hard
  to read. During the <b>2014 Facebook Hackathon</b> at the University of Waterloo, I worked alongside three
  other students from the University of Waterloo to create LaTeXMe, a proof of concept web app for instant messaging
  where equations need to be sent. Users can login to Facebook and invite their friends to join them to collaborate on
  math in the LaTexMe chatroom, which can render equations beautifully on the screen from LaTeX. It is powered by
  the MathJax library. I gained exposure to using the <b>Facebook Graph API</b> while working on this project."
  links:
    - display: Source Code on GitHub
      href: "https://github.com/hyunwookshin/uwcollab"

- name: "multichat"
  technologies: Java
  description: "multichat consists of 2 different kinds of programs: a server and a client.
  Multiple instances of the client program can run at the same time and messages can be sent between clients
  and the server. New clients can join and leave the group at any point in time. The main purpose of this project
  is to practice working with <b>concurrency</b> and <b>networking</b> in Java."
  screenshots:
    - description: "The server is launched and it's listening for client requests to connect."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/server_listening_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/server_listening.png"
    - description: "The server has successfully connected with two clients."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/server_connected_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/server_connected.PNG"
    - description: "Each client and the server itself can send messages to everyone else."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/chat_session_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/chat_session.PNG"
    - description: "When the server's input is &quot; END &quot;, the server shuts down and the clients receive the signal to shut down."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/session_ended_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/multichat/session_ended.PNG"
  links:
    - display: Source Code on GitHub
      href: "https://github.com/tuzhucheng/multichat"

- name: "GradeTrackr"
  technologies: Android
  description: "GradeTrackr is an Android application that helps students to keep track of their grades.
  I worked on this project alongside 3 peers in my program. Students can enter terms, courses, categories,
  and different kinds of evaluations such as tests, quizzes, assignments, and projects into the app and the
  app can calculate the weighted averages. All data is stored in a SQLite database."
  screenshots:
    - description: "This is the main activity of GradeTrackr when there are no terms present."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/terms_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/terms.png"
    - description: "Categories belonging to a course is displayed here. Each category has its own colour and mark and the total mark for the course as a weighted sum of the category marks is shown at the top."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/categories_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/categories.PNG"
    - description: "Evaluations for a particular category: evaluations can be expanded to show more details."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/evaluations_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/evaluations.PNG"
    - description: "The search functionality can be used to search for courses, categories, and evaluations."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/search_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/gradetrackr/search.PNG"
  links:
    - display: Source Code on GitHub
      href: "https://github.com/tuzhucheng/gradebook-android"
    - display: Google Play link
      href: "https://play.google.com/store/apps/details?id=ca.projectkarma.gradetrackr"

- name: "Sudoku Solver"
  technologies: Java, JavaScript, C#
  description: "Sudoku Solver does exactly what it says, it can solve any Sudoku found on the web and in puzzle books.
                  I used my own algorithm for this project, which is based on 2 elimination techniques.
                  The Sudoku Solver was initially written in Java, and afterwards it was ported to JavaScript as an iOS web app (Mobile Safari)
                  and also to C# as a native Windows 8 app. The Windows 8 app was made during the 2012 WowZapp Microsoft Worldwide Hackathon
                  and the Sudoku Solver received a mention on a MSDN blog."
  screenshots:
    - description: "Entering the puzzle on Mobile Safari."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/ios_enter_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/ios_enter.PNG"
    - description: "The sudoku is solved on Mobile Safari."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/ios_result_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/ios_result.PNG"
    - description: "The native app for Windows 8 has a step-by-step function that is added. When it is enabled,
      the app can walk the user through how to get to the correct solution using logical deductions."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/win8_step_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/win8_step.PNG"
    - description: "The sudoku is solved on Windows 8."
      thumbnail: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/win8_solved_small.PNG"
      fullsize: "https://dl.dropboxusercontent.com/u/39814157/tuzhucheng.com/sudoku/win8_solved.PNG"
  links:
    - display: Windows 8 App (C#) Source Code on GitHub
      href: "https://github.com/tuzhucheng/Step-By-Step-Sudoku-Solver-for-Windows-8"
    - display: JavaScript Source Code on GitHub
      href: "https://github.com/tuzhucheng/sudoku-solver-js"
    - display: MSDN Blog Mention
      href: "http://blogs.msdn.com/b/cdnstudents/archive/2012/12/04/waterloo-wowzapp-microsoft-worldwide-hackathon.aspx"
